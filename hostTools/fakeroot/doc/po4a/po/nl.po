# Nederlandse vertaling van Fakeroot
# Copyright (C) 2007 Martijn Dekker <martijn@inlv.org>
# Martijn Dekker <martijn@inlv.org>, 2007.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: fakeroot 1.5.12\n"
"POT-Creation-Date: 2005-11-16 16:58+0100\n"
"PO-Revision-Date: 2007-01-20 20:44+0100\n"
"Last-Translator: Martijn Dekker <martijn@inlv.org>\n"
"Language-Team: Dutch <nl@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=iso-8859-1\n"
"Content-Transfer-Encoding: 8bit\n"

# type: TH
#: ../../doc/fakeroot.1:16
#, no-wrap
msgid "fakeroot"
msgstr "fakeroot"

# type: TH
#: ../../doc/fakeroot.1:16
#, no-wrap
msgid "6 August 2004"
msgstr "6 augustus 2004"

# type: TH
#: ../../doc/fakeroot.1:16 ../../doc/faked.1:16
#, no-wrap
msgid "Debian Project"
msgstr "Project Debian"

# type: TH
#: ../../doc/fakeroot.1:16
#, no-wrap
msgid "Debian manual"
msgstr "Handleiding van Debian"

# type: SH
#.  Manpage by J.H.M. Dassen <jdassen@debian.org>
#.  and Clint Adams
#: ../../doc/fakeroot.1:19 ../../doc/faked.1:19
#, no-wrap
msgid "NAME"
msgstr "NAAM"

# type: Plain text
#: ../../doc/fakeroot.1:22
msgid ""
"fakeroot - run a command in an environment faking root privileges for file "
"manipulation"
msgstr ""
"fakeroot - voert een commando uit in een omgeving die root-privileges "
"fingeert voor het manipuleren van bestanden"

# type: SH
#: ../../doc/fakeroot.1:22 ../../doc/faked.1:22
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNTAX"

# type: Plain text
#: ../../doc/fakeroot.1:38
msgid ""
"B<fakeroot> B<[-l|--lib> I<library]> B<[--faked> I<faked-binary>B<]> B<[-i> "
"I<load-file>B<]> B<[-s> I<save-file>B<]> B<[-u|--unknown-is-real ]> B<[-b|--"
"fd-base ]> B<[-h|--help ]> B<[-v|--version ]> B<[--]> B<[command]>"
msgstr ""
"B<fakeroot> B<[-l|--lib> I<bibliotheek]> B<[--faked> I<binair-bestand-"
"faked>B<]> B<[-i> I<te-laden-bestand>B<]> B<[-s> I<te-bewaren-bestand>B<]> B<[-u|--"
"unknown-is-real ]> B<[-b|--fd-base ]> B<[-h|--help ]> B<[-v|--version ]> B<"
"[--]> B<[commando]>"

# type: SH
#: ../../doc/fakeroot.1:38 ../../doc/faked.1:30
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHRIJVING"

# type: Plain text
#: ../../doc/fakeroot.1:49
msgid ""
"B<fakeroot> runs a command in an environment wherein it appears to have root "
"privileges for file manipulation.  This is useful for allowing users to "
"create archives (tar, ar, .deb etc.) with files in them with root "
"permissions/ownership.  Without B<fakeroot> one would need to have root "
"privileges to create the constituent files of the archives with the correct "
"permissions and ownership, and then pack them up, or one would have to "
"construct the archives directly, without using the archiver."
msgstr ""
"B<fakeroot> voert een commando uit in een omgeving waarin het voor dit "
"commando lijkt alsof het root-privileges heeft voor het bewerken van "
"bestanden. Zo kunnen gebruikers in archieven (zoals tar, ar, .deb enz.) "
"bestanden opnemen met eigenaar en toegangsrechten die normaal gesproken "
"alleen root mag instellen. Zonder B<fakeroot> zou men root-toegang nodig "
"hebben om de bestanden in het archief aan te maken met de juiste "
"toegangsrechten en eigenaar en ze dan in te pakken, of men zou de archieven "
"direct, dus zonder gebruik te maken van het archiveerprogramma, moeten "
"opbouwen."

# type: Plain text
#: ../../doc/fakeroot.1:60
msgid ""
"B<fakeroot> works by replacing the file manipulation library functions (chmod"
"(2), stat(2) etc.) by ones that simulate the effect the real library "
"functions would have had, had the user really been root. These wrapper "
"functions are in a shared library B</usr/lib/libfakeroot.so*> which is "
"loaded through the B<LD_PRELOAD> mechanism of the dynamic loader. (See B<ld."
"so>(8))"
msgstr ""
"B<fakeroot> werkt door de bibliotheekfuncties voor bestandsbewerking (chmod"
"(2), stat(2) enz.) te vervangen door namaakfuncties, die het effect dat zou "
"zijn opgetreden als de gebruiker echt root was, nabootsen. Deze "
"`omhulselfuncties' (wrapper functions) bevinden zich in een gedeelde "
"bibliotheek, B</usr/lib/libfakeroot.so*>, die wordt geladen via het "
"mechanisme B<LD_PRELOAD> van de dynamische lader. (Zie B<ld.so>(8).)"

# type: Plain text
#: ../../doc/fakeroot.1:70
msgid ""
"If you intend to build packages with B<fakeroot>, please try building the "
"fakeroot package first: the \"debian/rules build\" stage has a few tests "
"(testing mostly for bugs in old fakeroot versions). If those tests fail (for "
"example because you have certain libc5 programs on your system), other "
"packages you build with fakeroot will quite likely fail too, but possibly in "
"much more subtle ways."
msgstr ""
"Bent u van plan met behulp van B<fakeroot> programmatuurpakketten te maken, probeer dan "
"eerst het fakeroot-pakket zelf opnieuw op te bouwen. De regel `build' in het bestand "
"I<debian/rules> bevat namelijk een aantal tests (die vooral fouten in oude "
"versies van fakeroot opsporen). Als deze tests niet slagen (omdat u "
"bijvoorbeeld bepaalde libc5-programma's op uw systeem heeft), dan zullen "
"andere pakketten die u met behulp van fakeroot opbouwt waarschijnlijk ook "
"niet goed werken. Dit kan dan echter veel moeilijker te ontdekken zijn."

# type: Plain text
#: ../../doc/fakeroot.1:76
msgid ""
"Also, note that it's best not to do the building of the binaries themselves "
"under fakeroot. Especially configure and friends don't like it when the "
"system suddenly behaves differently from what they expect. (or, they "
"randomly unset some environment variables, some of which fakeroot needs)."
msgstr ""
"Onthoud ook dat u beter niet de binaire bestanden zelf kunt bouwen in een "
"fakeroot-omgeving. Vooral B<configure> en dergelijke werken vaak niet goed "
"als het systeem zich plotseling anders gaat gedragen. (Bovendien wissen deze "
"programma's soms omgevingsvariabelen die fakeroot nodig kan hebben.)"

# type: SH
#: ../../doc/fakeroot.1:77 ../../doc/faked.1:38
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIES"

# type: TP
#: ../../doc/fakeroot.1:78
#, no-wrap
msgid "B<-l> I<library>, B<--lib> I<library>"
msgstr "B<-l> I<bibliotheek>, B<--lib> I<bibliotheek>"

# type: Plain text
#: ../../doc/fakeroot.1:81
msgid "Specify an alternative wrapper library."
msgstr "Een andere omhulselbibliotheek gebruiken."

# type: TP
#: ../../doc/fakeroot.1:81
#, no-wrap
msgid "B<--faked>I<\\ binary>"
msgstr ""

# type: Plain text
#: ../../doc/fakeroot.1:84
msgid "Specify an alternative binary to use as faked."
msgstr "Een ander binair bestand als B<faked>(1) gebruiken."

# type: TP
#: ../../doc/fakeroot.1:84
#, no-wrap
msgid "B<[--]>I<\\ command>"
msgstr "B<[--]>I<\\ commando>"

# type: Plain text
#: ../../doc/fakeroot.1:88
msgid ""
"Any command you want to be ran as fakeroot. Use \\(oq--\\(cq if in the "
"command you have other options that may confuse fakeroot's option parsing."
msgstr ""
"Een willekeurig commando dat u in een fakeroot-omgeving wilt uitvoeren. "
"Gebruik \\(oq--\\(cq als uw commando eigen opties bevat die het uitlezen van "
"opties door fakeroot in de war zouden kunnen sturen."

# type: TP
#: ../../doc/fakeroot.1:88
#, no-wrap
msgid "B<-s>I<\\ save-file>"
msgstr "B<-s>I<\\ te-bewaren-bestand>"

# type: Plain text
#: ../../doc/fakeroot.1:99
msgid ""
"Save the fakeroot environment to save-file on exit. This file can be used to "
"restore the environment later using -i. However, this file will leak and "
"fakeroot will behave in odd ways unless you leave the files touched inside "
"the fakeroot alone when outside the environment. Still, this can be useful. "
"For example, it can be used with rsync(1) to back up and restore whole "
"directory trees complete with user, group and device information without "
"needing to be root. See I</usr/share/doc/fakeroot/README.saving> for more "
"details."
msgstr ""
"De fakeroot-omgeving in het I<te-bewaren-bestand> opslaan bij afsluiten. Door dit bestand "
"aan de optie -i mee te geven kunt u later de omgeving herstellen. U moet echter niet tussentijds "
"buiten de fakeroot-omgeving enige bewerking uitvoeren op de bestanden, anders zal dit bestand "
"gaan `lekken' en zal fakeroot zich onvoorspelbaar gedragen. Toch kan deze mogelijkheid nuttig zijn. "
"U kunt bijvoorbeeld met rsync(1) reservekopieën maken van hele "
"mappen, compleet met informatie over gebruikers, groepen en apparaten, zonder "
"root te hoeven worden. Zie I</usr/share/doc/fakeroot/README.saving> voor meer "
"informatie."

# type: TP
#: ../../doc/fakeroot.1:99
#, no-wrap
msgid "B<-i>I<\\ load-file>"
msgstr "B<-i>I<\\ te-laden-bestand>"

# type: Plain text
#: ../../doc/fakeroot.1:106
msgid ""
"Load a fakeroot environment previously saved using -s from load-file.  Note "
"that this does not implicitly save the file, use -s as well for that "
"behaviour. Using the same file for both -i and -s in a single B<fakeroot> "
"invocation is safe."
msgstr ""
"Een eerder met -s bewaarde fakeroot-omgeving laden uit het I<te-laden-bestand>. Let "
"erop dat met deze optie het bestand niet bijgewerkt wordt; gebruik daarvoor ook "
"-s. Het is veilig om voor zowel -i als -s hetzelfde bestand aan te geven binnen "
"een enkele aanroep van fakeroot."

# type: TP
#: ../../doc/fakeroot.1:106
#, no-wrap
msgid "B<-u>, B<--unknown-is-real>"
msgstr "B<-u>, B<--unknown-is-real>"

# type: Plain text
#: ../../doc/fakeroot.1:110
msgid ""
"Use the real ownership of files previously unknown to fakeroot instead of "
"pretending they are owned by root:root."
msgstr ""
"De echte eigenaren handhaven van bestanden die niet eerder bij fakeroot bekend waren, "
"in plaats van te doen alsof deze eigendom waren van root:root."

# type: TP
#: ../../doc/fakeroot.1:110
#, no-wrap
msgid "B<-b>I<\\ fd>"
msgstr "B<-b>I<\\ fd>"

# type: Plain text
#: ../../doc/fakeroot.1:116
msgid ""
"Specify fd base (TCP mode only). fd is the minimum file descriptor number to "
"use for TCP connections; this may be important to avoid conflicts with the "
"file descriptors used by the programs being run under fakeroot."
msgstr ""
"Het basisnummer van file descriptors aangeven (alleen TCP-modus). I<fd> geeft het minimale file descriptor-nummer aan dat "
"voor TCP-verbindingen gebruikt kan worden; dit kan belangrijk zijn om conflicten te vermijden met de "
"file descriptors die door de onder fakeroot uitgevoerde programma's gebruikt worden."

# type: TP
#: ../../doc/fakeroot.1:116
#, no-wrap
msgid "B<-h>"
msgstr "B<-h>"

# type: Plain text
#: ../../doc/fakeroot.1:119
msgid "Display help."
msgstr "Hulp tonen."

# type: TP
#: ../../doc/fakeroot.1:119
#, no-wrap
msgid "B<-v>"
msgstr "B<-v>"

# type: Plain text
#: ../../doc/fakeroot.1:122
msgid "Display version."
msgstr "Versie tonen."

# type: SH
#: ../../doc/fakeroot.1:123
#, no-wrap
msgid "EXAMPLES"
msgstr "VOORBEELDEN"

# type: Plain text
#: ../../doc/fakeroot.1:128
msgid ""
"Here is an example session with B<fakeroot>.  Notice that inside the fake "
"root environment file manipulation that requires root privileges succeeds, "
"but is not really happening."
msgstr ""
"Hieronder ziet u een voorbeeldsessie met B<fakeroot>. Merk op dat binnen de "
"nagebootste root-omgeving de bestandsbewerkingen die root-privileges vereisen "
"lijken te slagen, maar in het echt niet worden uitgevoerd."

# type: Plain text
#: ../../doc/fakeroot.1:151
#, no-wrap
msgid ""
"$  whoami\n"
"joost\n"
"$ fakeroot /bin/bash\n"
"#  whoami\n"
"root\n"
"# mknod hda3 b 3 1\n"
"# ls -ld hda3\n"
"brw-r--r--   1 root     root       3,   1 Jul  2 22:58 hda3\n"
"# chown joost:root hda3\n"
"# ls -ld hda3\n"
"brw-r--r--   1 joost    root       3,   1 Jul  2 22:58 hda3\n"
"# ls -ld /\n"
"drwxr-xr-x  20 root     root         1024 Jun 17 21:50 /\n"
"# chown joost:users /\n"
"# chmod a+w /\n"
"# ls -ld /\n"
"drwxrwxrwx  20 joost    users        1024 Jun 17 21:50 /\n"
"# exit\n"
"$ ls -ld /\n"
"drwxr-xr-x  20 root     root         1024 Jun 17 21:50 //\n"
"$ ls -ld hda3\n"
"-rw-r--r--   1 joost    users           0 Jul  2 22:58 hda3\n"
msgstr ""
"$  whoami\n"
"joost\n"
"$ fakeroot /bin/bash\n"
"#  whoami\n"
"root\n"
"# mknod hda3 b 3 1\n"
"# ls -ld hda3\n"
"brw-r--r--  1 root root 3, 1 2007-01-21 12:02 hda3\n"
"# chown joost:root hda3\n"
"# ls -ld hda3\n"
"brw-r--r--  1 joost root 3, 1 2007-01-21 12:02 hda3\n"
"# ls -ld /\n"
"drwxr-xr-x  22 root root 600 2007-01-20 23:58 /\n"
"# chown joost:users /\n"
"# chmod a+w /\n"
"# ls -ld /\n"
"drwxrwxrwx  22 joost users 600 2007-01-20 23:58 /\n"
"# exit\n"
"$ ls -ld /\n"
"drwxr-xr-x  22 root root 600 2007-01-20 23:58 /\n"
"$ ls -ld hda3\n"
"-rw-r--r--  1 joost users 0 2007-01-21 12:06 hda3\n"

# type: Plain text
#: ../../doc/fakeroot.1:155
msgid "Only the effects that user B<joost> could do anyway happen for real."
msgstr "Alleen de bewerkingen die de gebruiker B<joost> toch al mocht uitvoeren, gebeuren ook echt."

# type: Plain text
#: ../../doc/fakeroot.1:167
msgid ""
"B<fakeroot> was specifically written to enable users to create Debian GNU/"
"Linux packages (in the B<deb(5)> format) without giving them root "
"privileges.  This can be done by commands like B<dpkg-buildpackage -"
"rfakeroot> or B<debuild -rfakeroot> (actually, -rfakeroot is default in "
"debuild nowadays, so you don't need that argument)."
msgstr ""
"B<fakeroot> is speciaal geschreven zodat gebruikers Debian GNU/"
"Linux-pakketten (in het B<deb(5)>-formaat) kunnen maken zonder daarvoor root-"
"privileges nodig te hebben. Dit doet u met commando's als B<dpkg-buildpackage -"
"rfakeroot> of B<debuild -rfakeroot> (in feite is -rfakeroot tegenwoordig standaard "
"in debuild, dus die parameter kunt u weglaten)."

# type: SH
#: ../../doc/fakeroot.1:167
#, no-wrap
msgid "SECURITY ASPECTS"
msgstr "VEILIGHEIDSASPECTEN"

# type: Plain text
#: ../../doc/fakeroot.1:171
msgid ""
"B<fakeroot> is a regular, non-setuid program. It does not enhance a user's "
"privileges, or decrease the system's security."
msgstr ""
"B<fakeroot> is een normaal programma, zonder setuid. Het verhoogt de privileges van de "
"gebruiker niet, en verlaagt dus ook niet de veiligheid van het systeem."

# type: SH
#: ../../doc/fakeroot.1:171
#, no-wrap
msgid "FILES"
msgstr "BESTANDEN"

# type: Plain text
#: ../../doc/fakeroot.1:174
msgid ""
"I</usr/lib/libfakeroot/libfakeroot.so*> The shared library containing the "
"wrapper functions."
msgstr ""
"I</usr/lib/libfakeroot/libfakeroot.so*> De gedeelde bibliotheek met de "
"omhulselfuncties."

# type: SH
#: ../../doc/fakeroot.1:174
#, no-wrap
msgid "ENVIRONMENT"
msgstr "OMGEVING"

# type: IP
#: ../../doc/fakeroot.1:176
#, no-wrap
msgid "B<FAKEROOTKEY>"
msgstr "B<FAKEROOTKEY>"

# type: Plain text
#: ../../doc/fakeroot.1:187
msgid ""
"The key used to communicate with the fakeroot daemon. Any program started "
"with the right B<LD_PRELOAD> and a B<FAKEROOTKEY> of a running daemon will "
"automatically connect to that daemon, and have the same \"fake\" view of the "
"file system's permissions/ownerships.  (assuming the daemon and connecting "
"program were started by the same user)."
msgstr ""
"De sleutel om met de fakeroot-daemon te communiceren. Ieder programma dat wordt gestart "
"met de juiste B<LD_PRELOAD> en een B<FAKEROOTKEY> van een momenteel draaiende daemon wordt "
"automatisch verbonden met die daemon, en krijgt hetzelfde `valse' zicht op de "
"toegangsrechten/eigenaren van het bestandssysteem (ervan uitgaande dat de daemon en het "
"programma dat de verbinding maakt werden opgestart door dezelfde gebruiker)."

# type: IP
#: ../../doc/fakeroot.1:187
#, no-wrap
msgid "B<LD_LIBRARY_PATH>"
msgstr "B<LD_LIBRARY_PATH>"

# type: IP
#: ../../doc/fakeroot.1:189
#, no-wrap
msgid "B<LD_PRELOAD>"
msgstr "B<LD_PRELOAD>"

# type: Plain text
#: ../../doc/fakeroot.1:202
msgid ""
"Fakeroot is implemented by wrapping system calls.  This is accomplished by "
"setting LD_LIBRARY_PATH=/usr/lib/fakeroot and LD_PRELOAD=libfakeroot.so.0.  "
"That library is loaded before the system's C library, and so most of the "
"library functions are intercepted by it.  If you need to set either "
"B<LD_LIBRARY_PATH> or B<LD_PRELOAD> from within a fakeroot environment, it "
"should be set relative to the given paths, as in B<LD_LIBRARY_PATH="
"$LD_LIBRARY_PATH:/foo/bar/>"
msgstr ""
"Fakeroot werkt door systeemaanroepen te `omhullen' (`wrappen'). Dit wordt mogelijk gemaakt door "
"LD_LIBRARY_PATH=/usr/lib/fakeroot en LD_PRELOAD=libfakeroot.so.0 in te stellen. "
"Deze bibliotheek wordt vóór de C-bibliotheek van het systeem geladen, en dus wordt het "
"grootste deel van de bibliotheekfuncties erdoor afgevangen. Als u ofwel "
"B<LD_LIBRARY_PATH> ofwel B<LD_PRELOAD> moet instellen vanuit een fakeroot-omgeving, dan "
"moeten deze I<na> de al ingestelde paden worden ingesteld, bijvoorbeeld: B<LD_LIBRARY_PATH="
"$LD_LIBRARY_PATH:/pad/naar/de/map/>"

# type: SH
#: ../../doc/fakeroot.1:203
#, no-wrap
msgid "LIMITATIONS"
msgstr "BEPERKINGEN"

# type: IP
#: ../../doc/fakeroot.1:205
#, no-wrap
msgid "B<Library versions>"
msgstr "B<Versies bibliotheken>"

# type: Plain text
#: ../../doc/fakeroot.1:212
msgid ""
"Every command executed within B<fakeroot> needs to be linked to the same "
"version of the C library as B<fakeroot> itself."
msgstr ""
"Ieder binnen B<fakeroot> uitgevoerd commando dient gekoppeld te zijn aan dezelfde "
"versie van de C-bibliotheek als B<fakeroot> zelf."

# type: IP
#: ../../doc/fakeroot.1:212
#, no-wrap
msgid "B<open()/create()>"
msgstr "B<open()/create()>"

# type: Plain text
#: ../../doc/fakeroot.1:216
msgid ""
"fakeroot doesn't wrap open(), create(), etc. So, if user B<joost> does either"
msgstr ""
"fakeroot `omhult' niet de functies open(), create(), enz. Dus als de gebruiker B<joost> de commando's"

# type: Plain text
#: ../../doc/fakeroot.1:220
#, no-wrap
msgid ""
"touch foo\n"
"fakeroot \n"
"ls -al foo\n"
msgstr ""
"touch testbestand\n"
"fakeroot \n"
"ls -al testbestand\n"

# type: Plain text
#: ../../doc/fakeroot.1:222
msgid "or the other way around,"
msgstr "uitvoert, in deze of in omgekeerde volgorde,"

# type: Plain text
#: ../../doc/fakeroot.1:226
#, no-wrap
msgid ""
"fakeroot\n"
"touch foo\n"
"ls -al foo\n"
msgstr ""
"fakeroot\n"
"touch testbestand\n"
"ls -al testbestand\n"

# type: Plain text
#: ../../doc/fakeroot.1:263
msgid ""
"fakeroot has no way of knowing that in the first case, the owner of foo "
"really should be B<joost> while the second case it should have been "
"B<root>.  For the Debian packaging, defaulting to giving all \"unknown\" "
"files uid=gid=0, is always OK. The real way around this is to wrap B<open()> "
"and B<create()>, but that creates other problems, as demonstrated by the "
"libtricks package. This package wrapped many more functions, and tried to do "
"a lot more than B<fakeroot .> It turned out that a minor upgrade of libc "
"(from one where the B<stat()> function didn't use B<open()> to one with a "
"B<stat()> function that did (in some cases) use B<open()>), would cause "
"unexplainable segfaults (that is, the libc6 B<stat()> called the wrapped "
"B<open()>, which would then call the libc6 B<stat()>, etc).  Fixing them "
"wasn't all that easy, but once fixed, it was just a matter of time before "
"another function started to use open(), never mind trying to port it to a "
"different operating system. Thus I decided to keep the number of functions "
"wrapped by fakeroot as small as possible, to limit the likelihood of "
"\\(oqcollisions\\(cq."
msgstr ""
"dan kan fakeroot niet weten dat in het eerste geval de eigenaar van I<testbestand> "
"eigenlijk B<joost> zou moeten zijn terwijl in het tweede geval deze B<root> moet "
"zijn. Voor het maken van Debian-pakketten is het altijd goed om standaard alle `onbekende' "
"bestanden eigenaar en groep 0 (root) te geven. Een echte oplossing voor dit probleem zou zijn het omhullen van B<open()> "
"en B<create()>, maar dat geeft weer andere problemen, zoals het "
"libtricks-pakket heeft aangetoond. Dit pakket omhulde veel meer functies, en wilde veel meer "
"doen dan B<fakeroot>. Het bleek dat slechts een kleine bijwerking van libc "
"(van een versie waarin de functie B<stat()> de functie B<open()> niet aanriep, naar eentje met "
"een B<stat()>-functie die (in sommige gevallen) wel degelijk van B<open()> gebruikt maakte) "
"onverklaarbare `segfaults' veroorzaakte (dat wil zeggen, de B<stat()> van libc6 riep de omhulde "
"B<open()> aan, die vervolgens de B<stat()> van libc6 weer aanriep, enz.). Het oplossen van dit "
"probleem was al niet makkelijk, maar bij iedere oplossing was het slechts een kwestie van tijd voordat "
"een andere functie weer B<open()> begon aan te roepen, en dan hebben we het nog niet eens over het "
"aanpassen van fakeroot aan een ander besturingssysteem. Dus besloot ik om het aantal door fakeroot omhulde functies "
"dan maar zo klein mogelijk te houden, om zo het gevaar van "
"\\(oqbotsingen\\(cq in te perken."

# type: IP
#: ../../doc/fakeroot.1:263
#, no-wrap
msgid "B<GNU configure (and other such programs)>"
msgstr "B<GNU configure (en andere soortgelijke programma's)>"

# type: Plain text
#: ../../doc/fakeroot.1:271
msgid ""
"fakeroot, in effect, is changing the way the system behaves. Programs that "
"probe the system like GNU configure may get confused by this (or if they "
"don't, they may stress fakeroot so much that fakeroot itself becomes "
"confused). So, it's advisable not to run \"configure\" from within fakeroot. "
"As configure should be called in the \"debian/rules build\" target, running "
"\"dpkg-buildpackage -rfakeroot\" correctly takes care of this."
msgstr ""
"Fakeroot verandert de manier waarop het systeem zich gedraagt. Programma's die "
"het systeem verkennen, zoals GNU configure, kunnen hierdoor in de war raken (of anders "
"kunnen zij fakeroot zo zwaar belasten dat fakeroot zelf in de war "
"raakt). Het is dus niet aan te raden B<configure> binnen fakeroot uit te voeren. "
"Aangezien configure dient te worden aangeroepen in de regel `build' in I<debian/rules>, zorgt "
"het commando B<dpkg-buildpackage -rfakeroot> er automatisch voor dat dit correct wordt afgehandeld."

# type: SH
#: ../../doc/fakeroot.1:271 ../../doc/faked.1:66
#, no-wrap
msgid "BUGS"
msgstr "FOUTEN"

# type: Plain text
#: ../../doc/fakeroot.1:281
msgid ""
"It doesn't wrap open(). This isn't bad by itself, but if a program does open"
"(\"file\", O_WRONLY, 000), writes to file \"file\", closes it, and then "
"again tries to open to read the file, then that open fails, as the mode of "
"the file will be 000. The bug is that if root does the same, open() will "
"succeed, as the file permissions aren't checked at all for root. I choose "
"not to wrap open(), as open() is used by many other functions in libc (also "
"those that are already wrapped), thus creating loops (or possible future "
"loops, when the implementation of various libc functions slightly change)."
msgstr ""
"Het programma omhult B<open()> niet. Dit is op zichzelf geen fout, maar als een programma "
"een commando I<open (\"bestand\", O_WRONLY, 000)> uitvoert, dan iets naar het bestand I<bestand>  schrijft, het sluit, en dan "
"nogmaals probeert het bestand voor uitlezen te openen, dan mislukt die B<open()>-aanroep, omdat de toegangsrechten van "
"het bestand op 000 staan. De fout zit erin dat als root hetzelfde doet, B<open()> wel degelijk zal "
"slagen, omdat de toegangsrechten voor root nooit worden nagetrokken. Ik heb er niettemin voor gekozen "
"B<open()> niet te omhullen, omdat B<open()> door vele andere functies in libc wordt gebruikt (ook "
"door al omhulde functies), wat kan uitmonden in oneindige lussen (nu of in de toekomst, "
"wanneer de implementatie van verscheidene libc-functies enigzins verandert)."

# type: SH
#: ../../doc/fakeroot.1:281 ../../doc/faked.1:76
#, no-wrap
msgid "COPYING"
msgstr "KOPIËREN"

# type: Plain text
#: ../../doc/fakeroot.1:285 ../../doc/faked.1:80
msgid ""
"B<fakeroot> is distributed under the GNU General Public License.  (GPL 2.0 "
"or greater)."
msgstr ""
"B<fakeroot> wordt verspreid onder de voorwaarden van de GNU General Public License (GPL 2.0 "
"of recenter)."

# type: SH
#: ../../doc/fakeroot.1:285 ../../doc/faked.1:80
#, no-wrap
msgid "AUTHORS"
msgstr "AUTEURS"

# type: TP
#: ../../doc/fakeroot.1:286 ../../doc/faked.1:81
#, no-wrap
msgid "joost witteveen"
msgstr "joost witteveen"

# type: Plain text
#: ../../doc/fakeroot.1:289 ../../doc/faked.1:84
msgid "E<lt>I<joostje@debian.org>E<gt>"
msgstr "E<lt>I<joostje@debian.org>E<gt>"

# type: TP
#: ../../doc/fakeroot.1:289 ../../doc/faked.1:84
#, no-wrap
msgid "Clint Adams"
msgstr "Clint Adams"

# type: Plain text
#: ../../doc/fakeroot.1:292 ../../doc/faked.1:87
msgid "E<lt>I<schizo@debian.org>E<gt>"
msgstr "E<lt>I<schizo@debian.org>E<gt>"

# type: TP
#: ../../doc/fakeroot.1:292 ../../doc/faked.1:87
#, no-wrap
msgid "Timo Savola"
msgstr "Timo Savola"

# type: SH
#: ../../doc/fakeroot.1:294 ../../doc/faked.1:89
#, no-wrap
msgid "MANUAL PAGE"
msgstr "HANDLEIDINGSPAGINA"

# type: Plain text
#: ../../doc/fakeroot.1:298
msgid ""
"mostly by J.H.M. Dassen E<lt>jdassen@debian.orgE<gt> Rather a lot mods/"
"additions by joost and Clint."
msgstr ""
"Vooral door J.H.M. Dassen E<lt>I<jdassen@debian.org>E<gt>. Nogal wat wijzigingen en "
"aanvullingen door joost en Clint."

# type: SH
#: ../../doc/fakeroot.1:298 ../../doc/faked.1:93
#, no-wrap
msgid "SEE ALSO"
msgstr "ZIE OOK"

# type: Plain text
#: ../../doc/fakeroot.1:303
msgid ""
"B<faked>(1)  B<dpkg-buildpackage>(1), B<debuild>(1)  B</usr/share/doc/"
"fakeroot/DEBUG>"
msgstr ""
"B<faked>(1),  B<dpkg-buildpackage>(1), B<debuild>(1),  B</usr/share/doc/"
"fakeroot/DEBUG>"

# type: TH
#: ../../doc/faked.1:16
#, no-wrap
msgid "faked"
msgstr "faked"

# type: TH
#: ../../doc/faked.1:16
#, no-wrap
msgid "17 June 2004"
msgstr "17 juni 2004"

# type: TH
#: ../../doc/faked.1:16
#, no-wrap
msgid "Debian GNU/Linux manual"
msgstr "Handleiding van Debian GNU/Linux"

# type: Plain text
#: ../../doc/faked.1:22
msgid ""
"faked - daemon that remembers fake ownership/permissions of files "
"manipulated by fakeroot processes."
msgstr ""
"faked - daemon die valse eigenaren/toegangsrechten onthoudt van bestanden "
"die door fakeroot-processen zijn bewerkt."

# type: Plain text
#: ../../doc/faked.1:30
msgid ""
"B<faked> B<[--debug] [--foreground] [--cleanup] [--key> I<msg-key>B<]> B<[--"
"load] [--save-file> I<save-file>B<]> B<[--port> I<TCP-port>B<]>"
msgstr ""
"B<faked> B<[--debug] [--foreground] [--cleanup] [--key> I<berichtensleutel>B<]> B<[--"
"load] [--save-file> I<te-bewaren-bestand>B<]> B<[--port> I<TCP-poort>B<]>"

# type: Plain text
#: ../../doc/faked.1:37
msgid ""
"If a fakeroot process wants to change the ownership of a file, then B<faked> "
"is the process that remembers that new owner. If later the same fakeroot "
"process does a stat() for that filename, then the libfakeroot wrapped stat() "
"call will first ask faked for the fake ownership etc of that file, and then "
"report it."
msgstr ""
"Als een fakeroot-proces de eigenaren van een bestand wil veranderen, dan is B<faked> "
"het proces dat de nieuwe eigenaar onthoudt. Als later hetzelfde fakeroot-"
"proces een B<stat()> uitvoert op die bestandsnaam, dan zal de door libfakeroot omhulde B<stat()>-"
"aanroep eerst faked verzoeken om de valse eigenaren, enz. van dat bestand, en dan "
"deze rapporteren."

# type: TP
#: ../../doc/faked.1:39
#, no-wrap
msgid "B<--debug>"
msgstr "B<--debug>"

# type: Plain text
#: ../../doc/faked.1:42
msgid "Print debugging information on stderr."
msgstr "Foutopsporingsinformatie op stderr afdrukken."

# type: TP
#: ../../doc/faked.1:42
#, no-wrap
msgid "B<--foreground>"
msgstr "B<--foreground>"

# type: Plain text
#: ../../doc/faked.1:45
msgid "Don't fork into the background."
msgstr "Niet naar de achtergrond `forken'."

# type: TP
#: ../../doc/faked.1:45
#, no-wrap
msgid "B<--cleanup \\ number>"
msgstr "B<--cleanup> I<nummer>"

# type: Plain text
#: ../../doc/faked.1:48
msgid "Cleanup the semaphores."
msgstr "De `semaphores' opschonen."

# type: TP
#: ../../doc/faked.1:48
#, no-wrap
msgid "B<--key \\ key-number>"
msgstr "B<--key> I<sleutelnummer>"

# type: Plain text
#: ../../doc/faked.1:52
msgid ""
"Don't allocate a new communication channel, but use channel specified by "
"key. (If the specified channel doesn't exist, it's created)."
msgstr ""
"Geen nieuw communicatiekanaal reserveren, maar het door I<sleutelnummer> aangegeven "
"kanaal gebruiken. (Als het aangegeven kanaal niet bestaat wordt het aangemaakt.)"

# type: TP
#: ../../doc/faked.1:52
#, no-wrap
msgid "B<--save-file \\ save-file>"
msgstr "B<--save-file> I<te-bewaren-bestand>"

# type: Plain text
#: ../../doc/faked.1:55
msgid "Save the environment to save-file on exit."
msgstr "De omgeving bij afsluiten opslaan in het I<te-bewaren-bestand>."

# type: TP
#: ../../doc/faked.1:55
#, no-wrap
msgid "B<--load>"
msgstr "B<--load>"

# type: Plain text
#: ../../doc/faked.1:58
msgid "Load a previously saved environment from the standard input."
msgstr "Een eerder opgeslagen omgeving uit standaard invoer inladen."

# type: TP
#: ../../doc/faked.1:58
#, no-wrap
msgid "B<--unknown-is-real>"
msgstr "B<--unknown-is-real>"

# type: Plain text
#: ../../doc/faked.1:62
msgid ""
"Use real ownership of previously-unknown files instead of setting them to "
"root:root."
msgstr ""
"De echte eigenaren van eerder onbekende bestanden gebruiken in plaats van "
"deze op root:root in te stellen."

# type: TP
#: ../../doc/faked.1:62
#, no-wrap
msgid "B<--port \\ tcp-port>"
msgstr "B<--port> I<TCP-poort>"

# type: Plain text
#: ../../doc/faked.1:65
msgid "Use TCP port tcp-port."
msgstr "De TCP-poort I<TCP-poort> gebruiken."

# type: Plain text
#: ../../doc/faked.1:76
msgid ""
"None so far. Be warned, though: although I've written quite a few much "
"larger (and smaller) programs, I've never written anything that was as tiny "
"as B<fakeroot>, had as many bugs as B<fakeroot>, and still was as usable as, "
"say, B<fakeroot> version 0.0_3, the first version that could be used to "
"build itself."
msgstr ""
"Tot nog toe geen. Wees echter gewaarschuwd: hoewel ik nogal wat veel grotere "
"(en kleinere) programma's heb geschreven, heb ik nog nooit zoiets piepkleins "
"geschreven als B<fakeroot>, of met zoveel fouten als B<fakeroot>, en dat toch "
"nog zo bruikbaar was als, laten we zeggen, B<fakeroot> versie 0.0_3, de eerste "
"versie die kon worden gebruikt om zichzelf te bouwen."

# type: Plain text
#: ../../doc/faked.1:93
msgid ""
"mostly by J.H.M. Dassen E<lt>jdassen@debian.orgE<gt> mods/additions by joost "
"and Clint."
msgstr ""
"Vooral door J.H.M. Dassen E<lt>I<jdassen@debian.org>E<gt>. Wijzigingen en aanvullingen door joost "
"en Clint."

# type: Plain text
#: ../../doc/faked.1:97
msgid ""
"B<fakeroot>(1), B<dpkg-buildpackage>(1), B<debuild>(1)  B</usr/share/doc/"
"fakeroot/DEBUG>"
msgstr ""
"B<fakeroot>(1), B<dpkg-buildpackage>(1), B<debuild>(1), B</usr/share/doc/"
"fakeroot/DEBUG>"
