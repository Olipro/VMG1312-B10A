# Makefile.in generated by automake 1.10.1 from Makefile.am.
# ntfsprogs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/ntfs-3g
pkglibdir = $(libdir)/ntfs-3g
pkgincludedir = $(includedir)/ntfs-3g
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = mipsel-unknown-elf
host_triplet = mips-unknown-linux-uclibc
target_triplet = mips-unknown-linux-uclibc
bin_PROGRAMS = ntfsfix$(EXEEXT) \
	ntfsinfo$(EXEEXT) ntfscluster$(EXEEXT) \
	ntfsls$(EXEEXT) ntfscat$(EXEEXT) \
	ntfscmp$(EXEEXT)
sbin_PROGRAMS = mkntfs$(EXEEXT) \
	ntfslabel$(EXEEXT) \
	ntfsundelete$(EXEEXT) \
	ntfsresize$(EXEEXT) ntfsclone$(EXEEXT) \
	ntfscp$(EXEEXT)
EXTRA_PROGRAMS = ntfsdump_logfile$(EXEEXT) \
	ntfswipe$(EXEEXT) ntfstruncate$(EXEEXT) \
	ntfsmove$(EXEEXT) ntfsmftalloc$(EXEEXT) \
	ntfsck$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = ntfsdecrypt
subdir = ntfsprogs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/mkntfs.8.in $(srcdir)/ntfscat.8.in \
	$(srcdir)/ntfsclone.8.in $(srcdir)/ntfscluster.8.in \
	$(srcdir)/ntfscmp.8.in $(srcdir)/ntfscp.8.in \
	$(srcdir)/ntfsfix.8.in $(srcdir)/ntfsinfo.8.in \
	$(srcdir)/ntfslabel.8.in $(srcdir)/ntfsls.8.in \
	$(srcdir)/ntfsprogs.8.in $(srcdir)/ntfsresize.8.in \
	$(srcdir)/ntfsundelete.8.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = mkntfs.8 ntfscat.8 ntfsclone.8 ntfscluster.8 \
	ntfscmp.8 ntfscp.8 ntfsfix.8 ntfsinfo.8 ntfslabel.8 ntfsls.8 \
	ntfsprogs.8 ntfsresize.8 ntfsundelete.8
#am__EXEEXT_1 = ntfsdecrypt$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(man8dir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am__mkntfs_SOURCES_DIST = attrdef.c attrdef.h boot.c boot.h sd.c sd.h \
	mkntfs.c utils.c utils.h
am_mkntfs_OBJECTS = mkntfs-attrdef.$(OBJEXT) \
	mkntfs-boot.$(OBJEXT) \
	mkntfs-sd.$(OBJEXT) \
	mkntfs-mkntfs.$(OBJEXT) \
	mkntfs-utils.$(OBJEXT)
mkntfs_OBJECTS = $(am_mkntfs_OBJECTS)
am__DEPENDENCIES_1 =
mkntfs_DEPENDENCIES = $(AM_LIBS) \
	$(am__DEPENDENCIES_1)
mkntfs_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(mkntfs_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfscat_SOURCES_DIST = ntfscat.c ntfscat.h utils.c utils.h
am_ntfscat_OBJECTS = ntfscat.$(OBJEXT) \
	utils.$(OBJEXT)
ntfscat_OBJECTS = $(am_ntfscat_OBJECTS)
ntfscat_DEPENDENCIES = $(AM_LIBS)
ntfscat_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscat_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsck_SOURCES_DIST = ntfsck.c utils.c utils.h
am_ntfsck_OBJECTS = ntfsck.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsck_OBJECTS = $(am_ntfsck_OBJECTS)
ntfsck_DEPENDENCIES = $(AM_LIBS)
ntfsck_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsck_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsclone_SOURCES_DIST = ntfsclone.c utils.c utils.h
am_ntfsclone_OBJECTS = ntfsclone.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsclone_OBJECTS = $(am_ntfsclone_OBJECTS)
ntfsclone_DEPENDENCIES = $(AM_LIBS)
ntfsclone_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsclone_LDFLAGS) $(LDFLAGS) -o $@
am__ntfscluster_SOURCES_DIST = ntfscluster.c ntfscluster.h cluster.c \
	cluster.h utils.c utils.h
am_ntfscluster_OBJECTS = ntfscluster.$(OBJEXT) \
	cluster.$(OBJEXT) utils.$(OBJEXT)
ntfscluster_OBJECTS = $(am_ntfscluster_OBJECTS)
ntfscluster_DEPENDENCIES = $(AM_LIBS)
ntfscluster_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfscluster_LDFLAGS) $(LDFLAGS) -o $@
am__ntfscmp_SOURCES_DIST = ntfscmp.c utils.c utils.h
am_ntfscmp_OBJECTS = ntfscmp.$(OBJEXT) \
	utils.$(OBJEXT)
ntfscmp_OBJECTS = $(am_ntfscmp_OBJECTS)
ntfscmp_DEPENDENCIES = $(AM_LIBS)
ntfscmp_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscmp_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfscp_SOURCES_DIST = ntfscp.c utils.c utils.h
am_ntfscp_OBJECTS = ntfscp.$(OBJEXT) \
	utils.$(OBJEXT)
ntfscp_OBJECTS = $(am_ntfscp_OBJECTS)
ntfscp_DEPENDENCIES = $(AM_LIBS)
ntfscp_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfscp_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsdecrypt_SOURCES_DIST = ntfsdecrypt.c utils.c utils.h
#am_ntfsdecrypt_OBJECTS = ntfsdecrypt-ntfsdecrypt.$(OBJEXT) \
#	ntfsdecrypt-utils.$(OBJEXT)
ntfsdecrypt_OBJECTS = $(am_ntfsdecrypt_OBJECTS)
#ntfsdecrypt_DEPENDENCIES =  \
#	$(AM_LIBS) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
ntfsdecrypt_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ntfsdecrypt_CFLAGS) \
	$(CFLAGS) $(ntfsdecrypt_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsdump_logfile_SOURCES_DIST = ntfsdump_logfile.c
am_ntfsdump_logfile_OBJECTS =  \
	ntfsdump_logfile.$(OBJEXT)
ntfsdump_logfile_OBJECTS = $(am_ntfsdump_logfile_OBJECTS)
ntfsdump_logfile_DEPENDENCIES = $(AM_LIBS)
ntfsdump_logfile_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsdump_logfile_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsfix_SOURCES_DIST = ntfsfix.c utils.c utils.h
am_ntfsfix_OBJECTS = ntfsfix.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsfix_OBJECTS = $(am_ntfsfix_OBJECTS)
ntfsfix_DEPENDENCIES = $(AM_LIBS)
ntfsfix_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsfix_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsinfo_SOURCES_DIST = ntfsinfo.c utils.c utils.h
am_ntfsinfo_OBJECTS = ntfsinfo.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsinfo_OBJECTS = $(am_ntfsinfo_OBJECTS)
ntfsinfo_DEPENDENCIES = $(AM_LIBS)
ntfsinfo_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsinfo_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfslabel_SOURCES_DIST = ntfslabel.c utils.c utils.h
am_ntfslabel_OBJECTS = ntfslabel.$(OBJEXT) \
	utils.$(OBJEXT)
ntfslabel_OBJECTS = $(am_ntfslabel_OBJECTS)
ntfslabel_DEPENDENCIES = $(AM_LIBS)
ntfslabel_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfslabel_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsls_SOURCES_DIST = ntfsls.c utils.c utils.h list.h
am_ntfsls_OBJECTS = ntfsls.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsls_OBJECTS = $(am_ntfsls_OBJECTS)
ntfsls_DEPENDENCIES = $(AM_LIBS)
ntfsls_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsls_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsmftalloc_SOURCES_DIST = ntfsmftalloc.c utils.c utils.h
am_ntfsmftalloc_OBJECTS =  \
	ntfsmftalloc.$(OBJEXT) utils.$(OBJEXT)
ntfsmftalloc_OBJECTS = $(am_ntfsmftalloc_OBJECTS)
ntfsmftalloc_DEPENDENCIES = $(AM_LIBS)
ntfsmftalloc_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsmftalloc_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsmove_SOURCES_DIST = ntfsmove.c ntfsmove.h utils.c utils.h
am_ntfsmove_OBJECTS = ntfsmove.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsmove_OBJECTS = $(am_ntfsmove_OBJECTS)
ntfsmove_DEPENDENCIES = $(AM_LIBS)
ntfsmove_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfsmove_LDFLAGS) \
	$(LDFLAGS) -o $@
am__ntfsresize_SOURCES_DIST = ntfsresize.c utils.c utils.h
am_ntfsresize_OBJECTS = ntfsresize.$(OBJEXT) \
	utils.$(OBJEXT)
ntfsresize_OBJECTS = $(am_ntfsresize_OBJECTS)
ntfsresize_DEPENDENCIES = $(AM_LIBS)
ntfsresize_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsresize_LDFLAGS) $(LDFLAGS) -o $@
am__ntfstruncate_SOURCES_DIST = attrdef.c ntfstruncate.c utils.c \
	utils.h
am_ntfstruncate_OBJECTS = attrdef.$(OBJEXT) \
	ntfstruncate.$(OBJEXT) utils.$(OBJEXT)
ntfstruncate_OBJECTS = $(am_ntfstruncate_OBJECTS)
ntfstruncate_DEPENDENCIES = $(AM_LIBS)
ntfstruncate_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfstruncate_LDFLAGS) $(LDFLAGS) -o $@
am__ntfsundelete_SOURCES_DIST = ntfsundelete.c ntfsundelete.h utils.c \
	utils.h list.h
am_ntfsundelete_OBJECTS =  \
	ntfsundelete.$(OBJEXT) utils.$(OBJEXT)
ntfsundelete_OBJECTS = $(am_ntfsundelete_OBJECTS)
ntfsundelete_DEPENDENCIES = $(AM_LIBS)
ntfsundelete_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntfsundelete_LDFLAGS) $(LDFLAGS) -o $@
am__ntfswipe_SOURCES_DIST = ntfswipe.c ntfswipe.h utils.c utils.h
am_ntfswipe_OBJECTS = ntfswipe.$(OBJEXT) \
	utils.$(OBJEXT)
ntfswipe_OBJECTS = $(am_ntfswipe_OBJECTS)
ntfswipe_DEPENDENCIES = $(AM_LIBS)
ntfswipe_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ntfswipe_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
SOURCES = $(mkntfs_SOURCES) $(ntfscat_SOURCES) $(ntfsck_SOURCES) \
	$(ntfsclone_SOURCES) $(ntfscluster_SOURCES) $(ntfscmp_SOURCES) \
	$(ntfscp_SOURCES) $(ntfsdecrypt_SOURCES) \
	$(ntfsdump_logfile_SOURCES) $(ntfsfix_SOURCES) \
	$(ntfsinfo_SOURCES) $(ntfslabel_SOURCES) $(ntfsls_SOURCES) \
	$(ntfsmftalloc_SOURCES) $(ntfsmove_SOURCES) \
	$(ntfsresize_SOURCES) $(ntfstruncate_SOURCES) \
	$(ntfsundelete_SOURCES) $(ntfswipe_SOURCES)
DIST_SOURCES = $(am__mkntfs_SOURCES_DIST) $(am__ntfscat_SOURCES_DIST) \
	$(am__ntfsck_SOURCES_DIST) $(am__ntfsclone_SOURCES_DIST) \
	$(am__ntfscluster_SOURCES_DIST) $(am__ntfscmp_SOURCES_DIST) \
	$(am__ntfscp_SOURCES_DIST) $(am__ntfsdecrypt_SOURCES_DIST) \
	$(am__ntfsdump_logfile_SOURCES_DIST) \
	$(am__ntfsfix_SOURCES_DIST) $(am__ntfsinfo_SOURCES_DIST) \
	$(am__ntfslabel_SOURCES_DIST) $(am__ntfsls_SOURCES_DIST) \
	$(am__ntfsmftalloc_SOURCES_DIST) $(am__ntfsmove_SOURCES_DIST) \
	$(am__ntfsresize_SOURCES_DIST) \
	$(am__ntfstruncate_SOURCES_DIST) \
	$(am__ntfsundelete_SOURCES_DIST) $(am__ntfswipe_SOURCES_DIST)
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /tmp/1/ntfs-3g/missing --run aclocal-1.10
AMTAR = ${SHELL} /tmp/1/ntfs-3g/missing --run tar
AR = $(CROSS_COMPILE)ar
AUTOCONF = ${SHELL} /tmp/1/ntfs-3g/missing --run autoconf
AUTOHEADER = ${SHELL} /tmp/1/ntfs-3g/missing --run autoheader
AUTOMAKE = ${SHELL} /tmp/1/ntfs-3g/missing --run automake-1.10
AWK = gawk
CC = $(CROSS_COMPILE)gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = $(CROSS_COMPILE)gcc -E
CPPFLAGS = 
CXX = $(CROSS_COMPILE)g++
CXXCPP = $(CROSS_COMPILE)g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FUSE_MODULE_CFLAGS = 
FUSE_MODULE_LIBS = 
GNUTLS_CFLAGS = 
GNUTLS_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDCONFIG = /sbin/ldconfig
LDFLAGS = 
LIBFUSE_LITE_LIBS =  -lpthread
LIBGCRYPT_CFLAGS = 
LIBGCRYPT_CONFIG = 
LIBGCRYPT_LIBS = 
LIBNTFS_3G_VERSION = 83
LIBOBJS =  ${LIBOBJDIR}memcmp$U.o ${LIBOBJDIR}lstat$U.o ${LIBOBJDIR}stat$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}memcmp$U.lo ${LIBOBJDIR}lstat$U.lo ${LIBOBJDIR}stat$U.lo
MAINT = #
MAKEINFO = ${SHELL} /tmp/1/ntfs-3g/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKNTFS_CPPFLAGS = 
MKNTFS_LIBS = 
MV = /bin/mv
NMEDIT = 
OBJEXT = o
OUTPUT_FORMAT = 
PACKAGE = ntfs-3g
PACKAGE_BUGREPORT = ntfs-3g-devel@lists.sf.net
PACKAGE_NAME = ntfs-3g
PACKAGE_STRING = ntfs-3g 2012.1.15
PACKAGE_TARNAME = ntfs-3g
PACKAGE_VERSION = 2012.1.15
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = $(CROSS_COMPILE)ranlib
RM = /bin/rm
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = $(CROSS_COMPILE)strip
VERSION = 2012.1.15
abs_builddir = /tmp/1/ntfs-3g/ntfsprogs
abs_srcdir = /tmp/1/ntfs-3g/ntfsprogs
abs_top_builddir = /tmp/1/ntfs-3g
abs_top_srcdir = /tmp/1/ntfs-3g
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
all_includes =  
all_libraries =  
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = mipsel-unknown-elf
build_alias = mipsel
build_cpu = mipsel
build_os = elf
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = mips-unknown-linux-uclibc
host_alias = mips-linux-uclibc
host_cpu = mips
host_os = linux-uclibc
host_vendor = unknown
htmldir = ${docdir}
includedir = $(TOOLCHAIN_TOP)/usr/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /tmp/1/ntfs-3g/install-sh
libdir = $(TOOLCHAIN_TOP)/usr/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ntfs3gincludedir = $(includedir)/ntfs-3g
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = $(libdir)/pkgconfig
prefix = $(TOOLCHAIN_TOP)/usr/
program_transform_name = s,x,x,
psdir = ${docdir}
rootbindir = /bin
rootlibdir = /lib
rootsbindir = /sbin
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = mips-unknown-linux-uclibc
target_alias = 
target_cpu = mips
target_os = linux-uclibc
target_vendor = unknown
top_builddir = ..
top_srcdir = ..
AM_LIBS = $(top_builddir)/libntfs-3g/libntfs-3g.la
#AM_LIBS = $(top_builddir)/libntfs-3g/.libs/libntfs-3g.a
AM_LFLAGS = $(all_libraries)
#AM_LFLAGS = -static
#STATIC_LINK = $(CC) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
LIBTOOL_LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@

# Workaround to make REALLYSTATIC work with automake 1.5.
LINK = $(STATIC_LINK) $(LIBTOOL_LINK)
man_MANS = mkntfs.8 ntfsfix.8 ntfslabel.8 ntfsinfo.8 \
			  ntfsundelete.8 ntfsresize.8 ntfsprogs.8 ntfsls.8 \
			  ntfsclone.8 ntfscluster.8 ntfscat.8 ntfscp.8 \
			  ntfscmp.8

EXTRA_MANS = 
CLEANFILES = $(EXTRA_PROGRAMS)
MAINTAINERCLEANFILES = Makefile.in

# Set the include path.
AM_CPPFLAGS = -I$(top_srcdir)/include/ntfs-3g $(all_includes)
ntfsfix_SOURCES = ntfsfix.c utils.c utils.h
ntfsfix_LDADD = $(AM_LIBS)
ntfsfix_LDFLAGS = $(AM_LFLAGS)
mkntfs_CPPFLAGS = $(AM_CPPFLAGS) $(MKNTFS_CPPFLAGS)
mkntfs_SOURCES = attrdef.c attrdef.h boot.c boot.h sd.c sd.h mkntfs.c utils.c utils.h
mkntfs_LDADD = $(AM_LIBS) $(MKNTFS_LIBS)
mkntfs_LDFLAGS = $(AM_LFLAGS)
ntfslabel_SOURCES = ntfslabel.c utils.c utils.h
ntfslabel_LDADD = $(AM_LIBS)
ntfslabel_LDFLAGS = $(AM_LFLAGS)
ntfsinfo_SOURCES = ntfsinfo.c utils.c utils.h
ntfsinfo_LDADD = $(AM_LIBS)
ntfsinfo_LDFLAGS = $(AM_LFLAGS)
ntfsundelete_SOURCES = ntfsundelete.c ntfsundelete.h utils.c utils.h list.h
ntfsundelete_LDADD = $(AM_LIBS)
ntfsundelete_LDFLAGS = $(AM_LFLAGS)
ntfsresize_SOURCES = ntfsresize.c utils.c utils.h
ntfsresize_LDADD = $(AM_LIBS)
ntfsresize_LDFLAGS = $(AM_LFLAGS)
ntfsclone_SOURCES = ntfsclone.c utils.c utils.h
ntfsclone_LDADD = $(AM_LIBS)
ntfsclone_LDFLAGS = $(AM_LFLAGS)
ntfscluster_SOURCES = ntfscluster.c ntfscluster.h cluster.c cluster.h utils.c utils.h
ntfscluster_LDADD = $(AM_LIBS)
ntfscluster_LDFLAGS = $(AM_LFLAGS)
ntfsls_SOURCES = ntfsls.c utils.c utils.h list.h
ntfsls_LDADD = $(AM_LIBS)
ntfsls_LDFLAGS = $(AM_LFLAGS)
ntfscat_SOURCES = ntfscat.c ntfscat.h utils.c utils.h
ntfscat_LDADD = $(AM_LIBS)
ntfscat_LDFLAGS = $(AM_LFLAGS)
ntfscp_SOURCES = ntfscp.c utils.c utils.h
ntfscp_LDADD = $(AM_LIBS)
ntfscp_LDFLAGS = $(AM_LFLAGS)
ntfsck_SOURCES = ntfsck.c utils.c utils.h
ntfsck_LDADD = $(AM_LIBS)
ntfsck_LDFLAGS = $(AM_LFLAGS)
ntfscmp_SOURCES = ntfscmp.c utils.c utils.h
ntfscmp_LDADD = $(AM_LIBS)
ntfscmp_LDFLAGS = $(AM_LFLAGS)

# We don't distribute these
ntfstruncate_SOURCES = attrdef.c ntfstruncate.c utils.c utils.h
ntfstruncate_LDADD = $(AM_LIBS)
ntfstruncate_LDFLAGS = $(AM_LFLAGS)
ntfsmftalloc_SOURCES = ntfsmftalloc.c utils.c utils.h
ntfsmftalloc_LDADD = $(AM_LIBS)
ntfsmftalloc_LDFLAGS = $(AM_LFLAGS)
ntfsmove_SOURCES = ntfsmove.c ntfsmove.h utils.c utils.h
ntfsmove_LDADD = $(AM_LIBS)
ntfsmove_LDFLAGS = $(AM_LFLAGS)
ntfswipe_SOURCES = ntfswipe.c ntfswipe.h utils.c utils.h
ntfswipe_LDADD = $(AM_LIBS)
ntfswipe_LDFLAGS = $(AM_LFLAGS)
ntfsdump_logfile_SOURCES = ntfsdump_logfile.c
ntfsdump_logfile_LDADD = $(AM_LIBS)
ntfsdump_logfile_LDFLAGS = $(AM_LFLAGS)
#ntfsdecrypt_SOURCES = ntfsdecrypt.c utils.c utils.h
#ntfsdecrypt_LDADD = $(AM_LIBS) $(GNUTLS_LIBS) $(LIBGCRYPT_LIBS)
#ntfsdecrypt_LDFLAGS = $(AM_LFLAGS)
#ntfsdecrypt_CFLAGS = $(GNUTLS_CFLAGS) $(LIBGCRYPT_CFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  ntfsprogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  ntfsprogs/Makefile
.PRECIOUS: Makefile
Makefile:
#Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
#	@case '$?' in \
#	  *config.status*) \
#	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
#	  *) \
#	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
#	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
#	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
mkntfs.8: $(top_builddir)/config.status $(srcdir)/mkntfs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscat.8: $(top_builddir)/config.status $(srcdir)/ntfscat.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsclone.8: $(top_builddir)/config.status $(srcdir)/ntfsclone.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscluster.8: $(top_builddir)/config.status $(srcdir)/ntfscluster.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscmp.8: $(top_builddir)/config.status $(srcdir)/ntfscmp.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfscp.8: $(top_builddir)/config.status $(srcdir)/ntfscp.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsfix.8: $(top_builddir)/config.status $(srcdir)/ntfsfix.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsinfo.8: $(top_builddir)/config.status $(srcdir)/ntfsinfo.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfslabel.8: $(top_builddir)/config.status $(srcdir)/ntfslabel.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsls.8: $(top_builddir)/config.status $(srcdir)/ntfsls.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsprogs.8: $(top_builddir)/config.status $(srcdir)/ntfsprogs.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsresize.8: $(top_builddir)/config.status $(srcdir)/ntfsresize.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
ntfsundelete.8: $(top_builddir)/config.status $(srcdir)/ntfsundelete.8.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mkntfs$(EXEEXT): $(mkntfs_OBJECTS) $(mkntfs_DEPENDENCIES) 
	@rm -f mkntfs$(EXEEXT)
	$(mkntfs_LINK) $(mkntfs_OBJECTS) $(mkntfs_LDADD) $(LIBS)
ntfscat$(EXEEXT): $(ntfscat_OBJECTS) $(ntfscat_DEPENDENCIES) 
	@rm -f ntfscat$(EXEEXT)
	$(ntfscat_LINK) $(ntfscat_OBJECTS) $(ntfscat_LDADD) $(LIBS)
ntfsck$(EXEEXT): $(ntfsck_OBJECTS) $(ntfsck_DEPENDENCIES) 
	@rm -f ntfsck$(EXEEXT)
	$(ntfsck_LINK) $(ntfsck_OBJECTS) $(ntfsck_LDADD) $(LIBS)
ntfsclone$(EXEEXT): $(ntfsclone_OBJECTS) $(ntfsclone_DEPENDENCIES) 
	@rm -f ntfsclone$(EXEEXT)
	$(ntfsclone_LINK) $(ntfsclone_OBJECTS) $(ntfsclone_LDADD) $(LIBS)
ntfscluster$(EXEEXT): $(ntfscluster_OBJECTS) $(ntfscluster_DEPENDENCIES) 
	@rm -f ntfscluster$(EXEEXT)
	$(ntfscluster_LINK) $(ntfscluster_OBJECTS) $(ntfscluster_LDADD) $(LIBS)
ntfscmp$(EXEEXT): $(ntfscmp_OBJECTS) $(ntfscmp_DEPENDENCIES) 
	@rm -f ntfscmp$(EXEEXT)
	$(ntfscmp_LINK) $(ntfscmp_OBJECTS) $(ntfscmp_LDADD) $(LIBS)
ntfscp$(EXEEXT): $(ntfscp_OBJECTS) $(ntfscp_DEPENDENCIES) 
	@rm -f ntfscp$(EXEEXT)
	$(ntfscp_LINK) $(ntfscp_OBJECTS) $(ntfscp_LDADD) $(LIBS)
ntfsdecrypt$(EXEEXT): $(ntfsdecrypt_OBJECTS) $(ntfsdecrypt_DEPENDENCIES) 
	@rm -f ntfsdecrypt$(EXEEXT)
	$(ntfsdecrypt_LINK) $(ntfsdecrypt_OBJECTS) $(ntfsdecrypt_LDADD) $(LIBS)
ntfsdump_logfile$(EXEEXT): $(ntfsdump_logfile_OBJECTS) $(ntfsdump_logfile_DEPENDENCIES) 
	@rm -f ntfsdump_logfile$(EXEEXT)
	$(ntfsdump_logfile_LINK) $(ntfsdump_logfile_OBJECTS) $(ntfsdump_logfile_LDADD) $(LIBS)
ntfsfix$(EXEEXT): $(ntfsfix_OBJECTS) $(ntfsfix_DEPENDENCIES) 
	@rm -f ntfsfix$(EXEEXT)
	$(ntfsfix_LINK) $(ntfsfix_OBJECTS) $(ntfsfix_LDADD) $(LIBS)
ntfsinfo$(EXEEXT): $(ntfsinfo_OBJECTS) $(ntfsinfo_DEPENDENCIES) 
	@rm -f ntfsinfo$(EXEEXT)
	$(ntfsinfo_LINK) $(ntfsinfo_OBJECTS) $(ntfsinfo_LDADD) $(LIBS)
ntfslabel$(EXEEXT): $(ntfslabel_OBJECTS) $(ntfslabel_DEPENDENCIES) 
	@rm -f ntfslabel$(EXEEXT)
	$(ntfslabel_LINK) $(ntfslabel_OBJECTS) $(ntfslabel_LDADD) $(LIBS)
ntfsls$(EXEEXT): $(ntfsls_OBJECTS) $(ntfsls_DEPENDENCIES) 
	@rm -f ntfsls$(EXEEXT)
	$(ntfsls_LINK) $(ntfsls_OBJECTS) $(ntfsls_LDADD) $(LIBS)
ntfsmftalloc$(EXEEXT): $(ntfsmftalloc_OBJECTS) $(ntfsmftalloc_DEPENDENCIES) 
	@rm -f ntfsmftalloc$(EXEEXT)
	$(ntfsmftalloc_LINK) $(ntfsmftalloc_OBJECTS) $(ntfsmftalloc_LDADD) $(LIBS)
ntfsmove$(EXEEXT): $(ntfsmove_OBJECTS) $(ntfsmove_DEPENDENCIES) 
	@rm -f ntfsmove$(EXEEXT)
	$(ntfsmove_LINK) $(ntfsmove_OBJECTS) $(ntfsmove_LDADD) $(LIBS)
ntfsresize$(EXEEXT): $(ntfsresize_OBJECTS) $(ntfsresize_DEPENDENCIES) 
	@rm -f ntfsresize$(EXEEXT)
	$(ntfsresize_LINK) $(ntfsresize_OBJECTS) $(ntfsresize_LDADD) $(LIBS)
ntfstruncate$(EXEEXT): $(ntfstruncate_OBJECTS) $(ntfstruncate_DEPENDENCIES) 
	@rm -f ntfstruncate$(EXEEXT)
	$(ntfstruncate_LINK) $(ntfstruncate_OBJECTS) $(ntfstruncate_LDADD) $(LIBS)
ntfsundelete$(EXEEXT): $(ntfsundelete_OBJECTS) $(ntfsundelete_DEPENDENCIES) 
	@rm -f ntfsundelete$(EXEEXT)
	$(ntfsundelete_LINK) $(ntfsundelete_OBJECTS) $(ntfsundelete_LDADD) $(LIBS)
ntfswipe$(EXEEXT): $(ntfswipe_OBJECTS) $(ntfswipe_DEPENDENCIES) 
	@rm -f ntfswipe$(EXEEXT)
	$(ntfswipe_LINK) $(ntfswipe_OBJECTS) $(ntfswipe_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f *.d

distclean-compile:
	-rm -f *.tab.c

# BRCM begin
#include ./$(DEPDIR)/attrdef.Po
#include ./$(DEPDIR)/cluster.Po
#include ./$(DEPDIR)/mkntfs-attrdef.Po
#include ./$(DEPDIR)/mkntfs-boot.Po
#include ./$(DEPDIR)/mkntfs-mkntfs.Po
#include ./$(DEPDIR)/mkntfs-sd.Po
#include ./$(DEPDIR)/mkntfs-utils.Po
#include ./$(DEPDIR)/ntfscat.Po
#include ./$(DEPDIR)/ntfsck.Po
#include ./$(DEPDIR)/ntfsclone.Po
#include ./$(DEPDIR)/ntfscluster.Po
#include ./$(DEPDIR)/ntfscmp.Po
#include ./$(DEPDIR)/ntfscp.Po
#include ./$(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
#include ./$(DEPDIR)/ntfsdecrypt-utils.Po
#include ./$(DEPDIR)/ntfsdump_logfile.Po
#include ./$(DEPDIR)/ntfsfix.Po
#include ./$(DEPDIR)/ntfsinfo.Po
#include ./$(DEPDIR)/ntfslabel.Po
#include ./$(DEPDIR)/ntfsls.Po
#include ./$(DEPDIR)/ntfsmftalloc.Po
#include ./$(DEPDIR)/ntfsmove.Po
#include ./$(DEPDIR)/ntfsresize.Po
#include ./$(DEPDIR)/ntfstruncate.Po
#include ./$(DEPDIR)/ntfsundelete.Po
#include ./$(DEPDIR)/ntfswipe.Po
#include ./$(DEPDIR)/utils.Po
# BRCM end
.c.o:
	#$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(COMPILE) -MT $@ -MD -c -o $@ $<
	#mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	#$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(COMPILE) -MT $@ -MD -c -o $@ `$(CYGPATH_W) '$<'`
	#mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	#$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(LTCOMPILE) -MT $@ -MD -c -o $@ $<
	#mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mkntfs-attrdef.o: attrdef.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.o -MD -MP -MF $(DEPDIR)/mkntfs-attrdef.Tpo -c -o mkntfs-attrdef.o `test -f 'attrdef.c' || echo '$(srcdir)/'`attrdef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.o -MD -c -o mkntfs-attrdef.o `test -f 'attrdef.c' || echo '$(srcdir)/'`attrdef.c
	#mv -f $(DEPDIR)/mkntfs-attrdef.Tpo $(DEPDIR)/mkntfs-attrdef.Po
#	source='attrdef.c' object='mkntfs-attrdef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-attrdef.o `test -f 'attrdef.c' || echo '$(srcdir)/'`attrdef.c

mkntfs-attrdef.obj: attrdef.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.obj -MD -MP -MF $(DEPDIR)/mkntfs-attrdef.Tpo -c -o mkntfs-attrdef.obj `if test -f 'attrdef.c'; then $(CYGPATH_W) 'attrdef.c'; else $(CYGPATH_W) '$(srcdir)/attrdef.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-attrdef.obj -MD -c -o mkntfs-attrdef.obj `if test -f 'attrdef.c'; then $(CYGPATH_W) 'attrdef.c'; else $(CYGPATH_W) '$(srcdir)/attrdef.c'; fi`
	#mv -f $(DEPDIR)/mkntfs-attrdef.Tpo $(DEPDIR)/mkntfs-attrdef.Po
#	source='attrdef.c' object='mkntfs-attrdef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-attrdef.obj `if test -f 'attrdef.c'; then $(CYGPATH_W) 'attrdef.c'; else $(CYGPATH_W) '$(srcdir)/attrdef.c'; fi`

mkntfs-boot.o: boot.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.o -MD -MP -MF $(DEPDIR)/mkntfs-boot.Tpo -c -o mkntfs-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.o -MD -c -o mkntfs-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
	#mv -f $(DEPDIR)/mkntfs-boot.Tpo $(DEPDIR)/mkntfs-boot.Po
#	source='boot.c' object='mkntfs-boot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

mkntfs-boot.obj: boot.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.obj -MD -MP -MF $(DEPDIR)/mkntfs-boot.Tpo -c -o mkntfs-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-boot.obj -MD -c -o mkntfs-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
	#mv -f $(DEPDIR)/mkntfs-boot.Tpo $(DEPDIR)/mkntfs-boot.Po
#	source='boot.c' object='mkntfs-boot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

mkntfs-sd.o: sd.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.o -MD -MP -MF $(DEPDIR)/mkntfs-sd.Tpo -c -o mkntfs-sd.o `test -f 'sd.c' || echo '$(srcdir)/'`sd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.o -MD -c -o mkntfs-sd.o `test -f 'sd.c' || echo '$(srcdir)/'`sd.c
	#mv -f $(DEPDIR)/mkntfs-sd.Tpo $(DEPDIR)/mkntfs-sd.Po
#	source='sd.c' object='mkntfs-sd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-sd.o `test -f 'sd.c' || echo '$(srcdir)/'`sd.c

mkntfs-sd.obj: sd.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.obj -MD -MP -MF $(DEPDIR)/mkntfs-sd.Tpo -c -o mkntfs-sd.obj `if test -f 'sd.c'; then $(CYGPATH_W) 'sd.c'; else $(CYGPATH_W) '$(srcdir)/sd.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-sd.obj -MD -c -o mkntfs-sd.obj `if test -f 'sd.c'; then $(CYGPATH_W) 'sd.c'; else $(CYGPATH_W) '$(srcdir)/sd.c'; fi`
	#mv -f $(DEPDIR)/mkntfs-sd.Tpo $(DEPDIR)/mkntfs-sd.Po
#	source='sd.c' object='mkntfs-sd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-sd.obj `if test -f 'sd.c'; then $(CYGPATH_W) 'sd.c'; else $(CYGPATH_W) '$(srcdir)/sd.c'; fi`

mkntfs-mkntfs.o: mkntfs.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.o -MD -MP -MF $(DEPDIR)/mkntfs-mkntfs.Tpo -c -o mkntfs-mkntfs.o `test -f 'mkntfs.c' || echo '$(srcdir)/'`mkntfs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.o -MD -c -o mkntfs-mkntfs.o `test -f 'mkntfs.c' || echo '$(srcdir)/'`mkntfs.c
	#mv -f $(DEPDIR)/mkntfs-mkntfs.Tpo $(DEPDIR)/mkntfs-mkntfs.Po
#	source='mkntfs.c' object='mkntfs-mkntfs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-mkntfs.o `test -f 'mkntfs.c' || echo '$(srcdir)/'`mkntfs.c

mkntfs-mkntfs.obj: mkntfs.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.obj -MD -MP -MF $(DEPDIR)/mkntfs-mkntfs.Tpo -c -o mkntfs-mkntfs.obj `if test -f 'mkntfs.c'; then $(CYGPATH_W) 'mkntfs.c'; else $(CYGPATH_W) '$(srcdir)/mkntfs.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-mkntfs.obj -MD -c -o mkntfs-mkntfs.obj `if test -f 'mkntfs.c'; then $(CYGPATH_W) 'mkntfs.c'; else $(CYGPATH_W) '$(srcdir)/mkntfs.c'; fi`
	#mv -f $(DEPDIR)/mkntfs-mkntfs.Tpo $(DEPDIR)/mkntfs-mkntfs.Po
#	source='mkntfs.c' object='mkntfs-mkntfs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-mkntfs.obj `if test -f 'mkntfs.c'; then $(CYGPATH_W) 'mkntfs.c'; else $(CYGPATH_W) '$(srcdir)/mkntfs.c'; fi`

mkntfs-utils.o: utils.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-utils.o -MD -MP -MF $(DEPDIR)/mkntfs-utils.Tpo -c -o mkntfs-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-utils.o -MD -c -o mkntfs-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	#mv -f $(DEPDIR)/mkntfs-utils.Tpo $(DEPDIR)/mkntfs-utils.Po
#	source='utils.c' object='mkntfs-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mkntfs-utils.obj: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkntfs-utils.obj -MD -MP -MF $(DEPDIR)/mkntfs-utils.Tpo -c -o mkntfs-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	mv -f $(DEPDIR)/mkntfs-utils.Tpo $(DEPDIR)/mkntfs-utils.Po
#	source='utils.c' object='mkntfs-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mkntfs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkntfs-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

ntfsdecrypt-ntfsdecrypt.o: ntfsdecrypt.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.o -MD -MP -MF $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo -c -o ntfsdecrypt-ntfsdecrypt.o `test -f 'ntfsdecrypt.c' || echo '$(srcdir)/'`ntfsdecrypt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.o -MD -c -o ntfsdecrypt-ntfsdecrypt.o `test -f 'ntfsdecrypt.c' || echo '$(srcdir)/'`ntfsdecrypt.c
	#mv -f $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
#	source='ntfsdecrypt.c' object='ntfsdecrypt-ntfsdecrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-ntfsdecrypt.o `test -f 'ntfsdecrypt.c' || echo '$(srcdir)/'`ntfsdecrypt.c

ntfsdecrypt-ntfsdecrypt.obj: ntfsdecrypt.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.obj -MD -MP -MF $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo -c -o ntfsdecrypt-ntfsdecrypt.obj `if test -f 'ntfsdecrypt.c'; then $(CYGPATH_W) 'ntfsdecrypt.c'; else $(CYGPATH_W) '$(srcdir)/ntfsdecrypt.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-ntfsdecrypt.obj -MD -c -o ntfsdecrypt-ntfsdecrypt.obj `if test -f 'ntfsdecrypt.c'; then $(CYGPATH_W) 'ntfsdecrypt.c'; else $(CYGPATH_W) '$(srcdir)/ntfsdecrypt.c'; fi`
	#mv -f $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Tpo $(DEPDIR)/ntfsdecrypt-ntfsdecrypt.Po
#	source='ntfsdecrypt.c' object='ntfsdecrypt-ntfsdecrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-ntfsdecrypt.obj `if test -f 'ntfsdecrypt.c'; then $(CYGPATH_W) 'ntfsdecrypt.c'; else $(CYGPATH_W) '$(srcdir)/ntfsdecrypt.c'; fi`

ntfsdecrypt-utils.o: utils.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.o -MD -MP -MF $(DEPDIR)/ntfsdecrypt-utils.Tpo -c -o ntfsdecrypt-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.o -MD -c -o ntfsdecrypt-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	#mv -f $(DEPDIR)/ntfsdecrypt-utils.Tpo $(DEPDIR)/ntfsdecrypt-utils.Po
#	source='utils.c' object='ntfsdecrypt-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

ntfsdecrypt-utils.obj: utils.c
	#$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.obj -MD -MP -MF $(DEPDIR)/ntfsdecrypt-utils.Tpo -c -o ntfsdecrypt-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -MT ntfsdecrypt-utils.obj -MD -c -o ntfsdecrypt-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	#mv -f $(DEPDIR)/ntfsdecrypt-utils.Tpo $(DEPDIR)/ntfsdecrypt-utils.Po
#	source='utils.c' object='ntfsdecrypt-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntfsdecrypt_CFLAGS) $(CFLAGS) -c -o ntfsdecrypt-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man8: $(man8_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man8dir)" || $(MKDIR_P) "$(DESTDIR)$(man8dir)"
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    8*) ;; \
	    *) ext='8' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst"; \
	done
uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list='$(man8_MANS) $(dist_man8_MANS) $(nodist_man8_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.8*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    8*) ;; \
	    *) ext='8' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man8dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man8dir)/$$inst"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
#uninstall-local:
#install-exec-hook:
#install-data-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-man
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-am

install-info: install-info-am

install-man: install-man8

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local uninstall-man \
	uninstall-sbinPROGRAMS

uninstall-man: uninstall-man8

.MAKE: install-am install-data-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-sbinPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am install-man \
	install-man8 install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-local uninstall-man uninstall-man8 \
	uninstall-sbinPROGRAMS


# Extra targets

strip:	$(bin_PROGRAMS) $(sbin_PROGRAMS)
	$(STRIP) $^

libs:
	(cd ../libntfs-3g && $(MAKE) libs) || exit 1;

extra:	extras

extras:	libs $(EXTRA_PROGRAMS)

# mkfs.ntfs[.8] hard link

install-exec-hook:
	$(INSTALL) -d $(DESTDIR)/sbin
	$(LN_S) -f $(sbindir)/mkntfs $(DESTDIR)/sbin/mkfs.ntfs

install-data-hook:
	$(INSTALL) -d $(DESTDIR)$(man8dir)
	$(LN_S) -f mkntfs.8 $(DESTDIR)$(man8dir)/mkfs.ntfs.8

uninstall-local:
	$(RM) -f $(DESTDIR)/sbin/mkfs.ntfs
	$(RM) -f $(DESTDIR)$(man8dir)/mkfs.ntfs.8
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
