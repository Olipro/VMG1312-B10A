AC_INIT(wput, 0.6)
AC_REVISION($Revision: 1.2 $)
AC_PREREQ(2.53)
CFLAGS="${CFLAGS} -Wall"
PACKAGE="wput"
VERSION="0.6"
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
GETOPT=""
MEMDBG=""
AC_ARG_ENABLE(memdbg,
 [  --enable-memdbg  enables memory debugging support [default=no]])
if test "$enable_memdbg" = "yes"; then
 CFLAGS="$CFLAGS -DMEMDBG"
 MEMDBG="memdbg.o" 
 echo "------------------------"
 echo "Memory debugging enabled. Do not forget to 'make clean',"
 echo "before you recompile Wput."
 echo "------------------------"
fi

AC_ARG_WITH(ssl,
[[  --with-ssl              link with SSL support [default=auto]
  --without-ssl           disable SSL autodetection]])

AC_ARG_ENABLE(g_switch,
 [  --disable-g-switch  uses the -g switch for compiling [default=yes]])
if test "$enable_g_switch" != "no"; then
 echo "Debug Information enabled"
 CFLAGS="$CFLAGS  -g"
fi
AC_PROG_CC
AC_CHECK_HEADERS([sys/ioctl.h], AC_DEFINE(HAVE_IOCTL))
AC_CHECK_HEADERS([locale.h], AC_DEFINE(HAVE_LOCALE_H))
AC_CHECK_HEADERS([libintl.h], AC_DEFINE(HAVE_LIBINTL_H))
AC_CHECK_HEADERS(getopt.h, [
 AC_SEARCH_LIBS(getopt_long, gnugetopt, [],
     [AC_MSG_ERROR("You need to get libgnugetopt or a newer GNU libc.")]
     )
 ],
    [AC_CHECK_HEADERS(gnugetopt/getopt.h, [
     AC_SEARCH_LIBS(getopt_long, gnugetopt, [],
     [AC_MSG_ERROR("You need to get libgnugetopt or a newer GNU libc.")]
     )
 ],
    [GETOPT="getopt/getopt.o getopt/getopt1.o"]
    )]
)

AM_GNU_GETTEXT([external])

dnl $with_ssl can be one of:
dnl  - empty string or "auto", meaning autodetect SSL and use it if found.
dnl  - "yes", meaning link with SSL or bail out.
dnl  - "no", meaning don't link with SSL.
dnl  - anything else, meaning use that as the SSL root, and bail out
dnl    if it fails.

if test x"$with_ssl" = x; then
  dnl Canonicalize unspecified with-ssl setting to "auto".  This
  dnl implements the "auto-detect by default" feature.  If you want to
  dnl change this to "ignore SSL by default", change "auto" to "no".
  with_ssl=auto
fi
dnl #
dnl # Check for GNUTLS if it's specified.
dnl #
if test "x$with_ssl" != "xno"; then
	with_ssl="no"
	prefix=`eval echo $prefix`

	AC_ARG_WITH(gnutls-includes,
		[  --with-gnutls-includes=PREFIX   Location of GNUTLS includes.],
		[ with_gnutls_includes="$withval" ],
		[ with_gnutls_includes="$prefix/include" ])

	have_gnutls_includes="no"

	if test "x$with_gnutls_includes" != "xno"; then
		CPPFLAGS_save="$CPPFLAGS"

		AC_MSG_CHECKING(for GNUTLS includes)
		AC_MSG_RESULT("")

		CPPFLAGS="$CPPFLAGS -I$with_gnutls_includes"
		AC_CHECK_HEADERS([gnutls/gnutls.h, gnutls/openssl.h], [ gnutls_includes="yes" ])
		CPPFLAGS="$CPPFLAGS_save"

		if test "x$gnutls_includes" != "xno" -a \
		        "x$gnutls_includes" != "x"; then
			have_gnutls_includes="yes"

			GNUTLS_CFLAGS="-I$with_gnutls_includes"
		else
			GNUTLS_CFLAGS=""
		fi
	else
		AC_MSG_CHECKING(for GNUTLS includes)
		AC_MSG_RESULT(no)
	fi

	AC_ARG_WITH(gnutls-libs,
		[  --with-gnutls-libs=PREFIX       Location of GNUTLS libraries.],
		[ with_gnutls_libs="$withval" ])

	if test "x$with_gnutls_libs"     != "xno" -a \
	        "x$have_gnutls_includes" != "xno"; then

		LDFLAGS_save="$LDFLAGS"

		case $with_gnutls_libs in
			""|-L*) ;;
			*) with_gnutls_libs="-L$with_gnutls_libs" ;;
		esac

		AC_CACHE_CHECK([for GNUTLS libraries], gnutls_libs,
		[
			LDFLAGS="$LDFLAGS $with_gnutls_libs -lgnutls -lgcrypt -lgnutls-openssl"
			AC_TRY_LINK_FUNC(gnutls_init, gnutls_libs="yes", gnutls_libs="no")
			LDFLAGS="$LDFLAGS_save"
		])

		if test "x$gnutls_libs" != "xno"; then
			AC_DEFINE(HAVE_GNUTLS, 1, [Define if you have GNUTLS])
			AC_DEFINE(HAVE_SSL)
			msg_gnutls="GNUTLS"
			GNUTLS_LIBS="$with_gnutls_libs -lgnutls-openssl"

			with_ssl="yes"
		else
			GNUTLS_CFLAGS=""
			GNUTLS_LIBS=""
		fi
	else
		AC_MSG_CHECKING(for GNUTLS libraries)
		AC_MSG_RESULT(no)
	fi
else
	GNUTLS_CFLAGS=""
	GNUTLS_LIBS=""
fi

AC_CHECK_TYPES([long long, unsigned long long], AC_DEFINE(HAVE_LONG_LONG))
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(short)
host_os=`uname`
case "$host_os" in
mpeix*)    LIBS="-lsocket $LIBS";;
sco3.2v5*) if test "$GCC" != "yes"; then
             CFLAGS="$CFLAGS"
           LD='$(CC) $(CFLAGS)'
      LIBS="-lsocket $LIBS"
    else
      CC="gcc"
      LIBS="-lsocket -lnsl $LIBS"
      CPPFLAGS="-D_THREAD_SAFE -pthread $CPPFLAGS"
    fi
  ;;
sysv5uw7*) LIBS="-lsocket $LIBS"
    if test "$GCC" != "yes"; then
      # We are using built-in inline function
      CC="cc -belf"
      CXX="CC -belf"
    fi
    LIBS="-lsocket $LIBS"
  ;;
sco*)    CC=${CC-"cc -belf"}
    LIBS="-lsocket $LIBS";;
SCO*)      CC=${CC-"cc -belf"}
           LIBS="-lsocket $LIBS";;
esac
AC_CONFIG_HEADER(src/config.h)
AC_SUBST(GETOPT)
AC_SUBST(MEMDBG)
AC_SUBST(GNUTLS_CFLAGS)
AC_SUBST(GNUTLS_LIBS)
AC_CONFIG_FILES([Makefile src/Makefile po/Makefile.in])

AC_OUTPUT
